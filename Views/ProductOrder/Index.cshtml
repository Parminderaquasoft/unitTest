@model ProcessOrder.Models.Order
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .error {
        color: #d9534f;
    }
     h3{padding:10px; margin:0 0 20px 0; background:#eee;}
    .btn-submit{background:#f1f1f1; padding:5px; text-align:center;}
</style>
@using (Html.BeginForm("Index", "ProductOrder", FormMethod.Post, new { @id = "formorder", autocomplete = "off" }))
{
    @Html.ValidationSummary("", new { style = "Color:red" })
    <div class="row">
        <div class="col-md-8">
            <div style="margin-left:18px;color:green;">
                @if (@ViewBag.Message != null)
                {
                   
                        <h3>@ViewBag.Message</h3>
                 
                }
            </div>

            <div class="panel panel-default">
                <h3 class="text-center">Order</h3>
                <div class="panel-body medical-examination">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>First Name</label>
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control alpha", @id = "FirstName" } })

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Last Name</label>
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control alpha ", @id = "LastName" } })
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Address</label>
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control ", @rows = "3"} })

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>City</label>
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control alpha " } })
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>State </label>
                                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control alpha" } })

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Zip </label>
                                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control txtNumeric " } })
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Phone </label>
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control txtNumeric",@type ="text" ,@maxlength=10} })

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Email </label>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control "} })
                            </div>
                        </div>
                      </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Card Number</label>
                                @Html.EditorFor(model => model.CardNumber, new { htmlAttributes = new { @class = "form-control txtNumeric", @type = "text", @maxlength = "16" } })

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Card Security Code</label>
                                @Html.EditorFor(model => model.CardSecurityCode, new { htmlAttributes = new { @class = "form-control txtNumeric", @type = "text" , @maxlength="3"} })
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label> Month</label>
                                @Html.EditorFor(model => model.CardExpirationMonth, new { htmlAttributes = new { @class = "form-control txtNumeric", @type = "text", @maxlength = "2"} })
                             </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Year</label>
                                @Html.EditorFor(model => model.CardExpirationYear, new { htmlAttributes = new { @class = "form-control txtNumeric", @type = "text", @maxlength = "4" } })
                            </div>
                        </div>
                     </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Product ID</label>
                                @Html.EditorFor(model => model.ProductId, new { htmlAttributes = new { @class = "form-control txtNumeric", @type = "text" } })

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Price</label>
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control " } })
                            </div>
                        </div>
                    </div>
                 </div>
                 <div class="btn-submit">
                <input type="submit" value="Save" class="btn btn-info btn-signup" />
            </div>
            </div>
        </div>
    </div>
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Content/jquery.validate.min.js"></script>

<script>
    $(function () {
        $('.txtNumeric').keydown(function (e) {
            if (e.shiftKey || e.ctrlKey || e.altKey) {
                e.preventDefault();
            } else {
                var key = e.keyCode;
                if (!((key == 8) || (key == 9) || (key == 46) || (key >= 35 && key <= 40) || (key >= 48 && key <= 57) || (key >= 96 && key <= 105))) {
                    e.preventDefault();
                }
            }
        });
    });
    $(function () {
        $('.alpha').keydown(function (e) {
            if (e.ctrlKey || e.altKey) {
                e.preventDefault();
            } else {
                var key = e.keyCode;
                if (!((key == 8) || (key == 9) || (key == 32) || (key == 46) || (key >= 35 && key <= 40) || (key >= 65 && key <= 90))) {
                    e.preventDefault();
                }
            }
        });
    });
</script>

<script>
    $(document).ready(function () {
        $("#formorder").validate({          
            rules: {
                "FirstName": {
                    required: true,
                    maxlength : 20
                },
                "LastName": {
                    required: true,
                    maxlength: 20
                },
                "Address": {
                    required: true,
                },
                "City": {
                    required: true
                },
                "State": {
                    required: true
                },
                "Zip": {
                    required: true
                },
                "Phone": {
                    required: true,
                    minlength: 10,
                },
                "Email": {
                    required: true,
                    email : true,

                },
                "CardNumber": {
                    required: true,
                    minlength: 16,
                },
                "CardExpirationMonth": {
                    required: true,
                    minlength: 2,
                },
                 "CardExpirationYear": {
                     required: true,
                     minlength: 4,
                },
                  "CardSecurityCode": {
                      required: true,
                      minlength: 3,
                },
                  "ProductId": {
                      required: true
                  },
                  "Price": {
                      required: true
                  },


            },
            messages: {
                "Address": "This field is required.",
                "City": "This field is required.",
                "State": "This field is required.",
                "Zip": "This field is required.",
                "ProductId": "This field is required.",
                "Price": "This field is required.",
                "Phone": {
                    required: "This field is required.",
                    minlength: "Mobile Number should contain 10 digits ",
                },
                "CardNumber": {
                    required: "This field is required.",
                    minlength: "Card Number should contain 16 digits ",
                },
                "CardExpirationYear": {
                    required: "This field is required.",
                    minlength: "Year should contain 4 digits  ex. 2017",
                },
                "CardExpirationMonth": {
                    required: "This field is required.",
                    minlength: "Month should contain 2 digits ex. 03",
                },
                "CardSecurityCode": {
                    required: "This field is required.",
                    minlength: "Card Security Code  should contain 3 digits ",
                },
                "Email": {
                    required: "This field is required.",
                    email: "Please enter a valid email.",
                },
                "FirstName": {
                required: "This field is required.",
                maxlength: "Maximum length 20 characters",
                },
                "LastName": {
                    required: "This field is required.",
                    maxlength: "Maximum length 20 characters",
                },
            }
        });
    });


</script>